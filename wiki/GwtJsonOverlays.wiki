#summary gwt json overlays howto
#labels Featured,gwt,json,overlays
={{{GWT JSON Overlays}}}=


={{{Code generated by protostuff-compiler}}}=

{{{Model.proto}}}

{{{
package foo;

option optimize_for = LITE_RUNTIME;
option java_package = "com.example.foo.model";

message Greet {
  optional int32 id = 1;
  optional string name = 2;
  optional string msg = 3;
  enum Status {
    NEW = 0;
    ACKNOWLEDGED = 1;
  }
  optional Status status = 4;
}
}}}

{{{modules.properties}}}

{{{
modules = foo

foo.source = Model.proto
#java_bean, gwt_overlay
foo.output = gwt_overlay
foo.outputDir = gwtgen
foo.encoding = UTF-8
foo.options = numeric
}}}

=={{{Execute:}}}==
java -jar protostuff-compiler-1.0-SNAPSHOT-jarjar.jar modules.properties

=={{{Output:}}}==
{{{
// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!

package com.example.foo.model;

import com.google.gwt.core.client.*;

public final class Greet extends JavaScriptObject  {

    public static final class Status extends JavaScriptObject {
            
        public static final Status NEW = create(0);
        public static final Status ACKNOWLEDGED = create(1);
        
        private static native Status create(int number) /*-{
            return number;
        }-*/;
        
        protected Status() {}
        
        public native int getNumber() /*-{
            return this;
        }-*/;
    }

    
    /**
     * Creates a new Greet instance 
     *
     * @return new Greet instance
     */
    public static native Greet create() /*-{
        return {
                        
        };
    }-*/;

    /**
     * Creates a new JsArray<Greet> instance 
     *
     * @return new JsArray<Greet> instance
     */
    public static native JsArray<Greet> createArray() /*-{
        return [];
    }-*/;

    /**
     * Gets a Greet (casting) from a JavaScriptObject
     *
     * @param JavaScriptObject to cast
     * @return Greet
     */
    public static native Greet get(JavaScriptObject jso) /*-{
        return jso;
    }-*/;

    /**
     * Gets a JsArray<Greet> (casting) from a JavaScriptObject
     *
     * @param JavaScriptObject to cast
     * @return JsArray<Greet> 
     */
    public static native JsArray<Greet> getArray(JavaScriptObject jso) /*-{
        return jso;
    }-*/;

    /**
     * Parses a Greet from a json string
     *
     * @param json string to be parsed/evaluated
     * @return Greet 
     */
    public static native Greet parse(String json) /*-{
        return eval("(" + json + ")");
    }-*/;

    /**
     * Parses a JsArray<Greet> from a json string
     *
     * @param json string to be parsed/evaluated
     * @return JsArray<Greet> 
     */
    public static native JsArray<Greet> parseArray(String json) /*-{
        return eval("(" + json + ")");
    }-*/;

    protected Greet() {}

    // getters and setters

    // id

    public native int getId() /*-{
        return this["id"];
    }-*/;

    public native void setId(int id) /*-{
        this["id"] = id;
    }-*/;

    // name

    public native String getName() /*-{
        return this["name"];
    }-*/;

    public native void setName(String name) /*-{
        this["name"] = name;
    }-*/;

    // msg

    public native String getMsg() /*-{
        return this["msg"];
    }-*/;

    public native void setMsg(String msg) /*-{
        this["msg"] = msg;
    }-*/;

    // status

    public native Status getStatus() /*-{
        return this["status"];
    }-*/;

    public native void setStatus(Status status) /*-{
        this["status"] = status;
    }-*/;


}
}}}

={{{Code generated by protostuff-codegen}}}=

To generate the code, see [CodeGeneratorViaAnt] and [CodeGeneratorViaMaven].

There are 2 types:
 * *gwt_json*
 * *gwt_numeric_json* (to be used in conjunction with [JSONSerialization numeric_json] in the server-side to be compatible ... the performance/size of the ser/deser is huge especially on large protobuf messages)


=={{{Model.proto}}}==
{{{
package foo;

option optimize_for = LITE_RUNTIME;
option java_package = "com.example.foo.model";
option java_outer_classname = "Model";

message Greet {
  optional int32 id = 1;
  optional string name = 2;
  optional string message = 3;
  enum Status {
    NEW = 0;
    ACKNOWLEDGED = 1;
  }
  optional Status status = 4;
}
}}}

Here's the output:

=={{{Greet.java}}}==
{{{
public final class Greet extends JavaScriptObject {
    
    public static final class Status extends JavaScriptObject {
        
        public static final Status NEW = create("NEW");
        
        public static final Status ACKNOWLEDGED = create("ACKNOWLEDGED");
        
        private static native Status create(String name) /*-{
            return name;
        }-*/;

        protected Status() {}

        public native String name() /*-{
            return this;
        }-*/;
    }
    
    /**
     * Creates a new Greet instance 
     *
     * @return new Greet instance
     */
    public static native Greet create() /*-{
        return {
                        
        };
    }-*/;

    /**
     * Creates a new JsArray<Greet> instance 
     *
     * @return new JsArray<Greet> instance
     */
    public static native JsArray<Greet> createArray() /*-{
        return [];
    }-*/;

    /**
     * Gets a Greet (casting) from a JavaScriptObject
     *
     * @param JavaScriptObject to cast
     * @return Greet
     */
    public static native Greet get(JavaScriptObject jso) /*-{
        return jso;
    }-*/;

    /**
     * Gets a JsArray<Greet> (casting) from a JavaScriptObject
     *
     * @param JavaScriptObject to cast
     * @return JsArray<Greet> 
     */
    public static native JsArray<Greet> getArray(JavaScriptObject jso) /*-{
        return jso;
    }-*/;

    /**
     * Parses a Greet from a json string
     *
     * @param json string to be parsed/evaluated
     * @return Greet 
     */
    public static native Greet parse(String json) /*-{
        return eval("(" + json + ")");
    }-*/;

    /**
     * Parses a JsArray<Greet> from a json string
     *
     * @param json string to be parsed/evaluated
     * @return JsArray<Greet> 
     */
    public static native JsArray<Greet> parseArray(String json) /*-{
        return eval("(" + json + ")");
    }-*/;

    protected Greet() {}
    
    /** id **/
    
    public native int getId() /*-{
        return this["id"];
    }-*/;

    public native void setId(int id) /*-{
        this["id"] = id;
    }-*/;
        
    /** name **/
    
    public native String getName() /*-{
        return this["name"];
    }-*/;

    public native void setName(String name) /*-{
        this["name"] = name;
    }-*/;
        
    /** message **/
    
    public native String getMessage() /*-{
        return this["message"];
    }-*/;

    public native void setMessage(String message) /*-{
        this["message"] = message;
    }-*/;
        
    /** status **/
    
    public native Status getStatus() /*-{
        return this["status"];
    }-*/;

    public native void setStatus(Status status) /*-{
        this["status"] = status;
    }-*/;
        
}
}}}