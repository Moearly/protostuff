#summary json ser/deser howto, usage
#labels Featured,json,ser,deser
={{{JSON ser/deser}}}=

The generated code uses the json api from jackson-core-asl-1.2.1

At runtime, the following should be on the classpath:
 * protobuf-java-2.2.0.jar - 313kb
 * jackson-core-asl-1.2.1.jar - 137kb
 * protostuff-json-1.0.0.M0.jar - 34kb

To generate the code, see [CodeGeneratorViaAnt] and [CodeGeneratorViaMaven].

There are 2 types:
 * json
 * numeric_json (the generated code ser/deser users the field number instead of the field name)

=={{{Model.proto}}}==
{{{
package foo;

option optimize_for = LITE_RUNTIME;
option java_package = "com.example.foo.model";
option java_outer_classname = "Model";

message Greet {
  optional int32 id = 1;
  optional string name = 2;
  optional string message = 3;
  enum Status {
    NEW = 0;
    ACKNOWLEDGED = 1;
  }
  optional Status status = 4;
}
}}}

={{{Usage}}}=

{{{

final ModelJSON json = new ModelJSON ();

public void parseFrom(InputStream in) throws IOException
{
    Greet greet = json.parseFrom(in, Greet.class);
}

public void writeTo(OutputStream out) throws IOException
{
    Greet greet = Greet.newBuilder().setId(1).setName("foo").setMessage("hello").setStatus(Greet.Status.NEW).build();
    json.writeTo(out, greet);
}

}}}