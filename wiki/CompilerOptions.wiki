#summary Compiler Options
#labels Featured

_Note that value (key:value) from some options are optional. The option "generate_field_map:false" does not disable the option ... remove the entry instead to disable._

= all =

* compile_imports = true | false| recursive*
 * after the target proto is compiled, compile the imported protos as well.
 * if recursive, the imported protos of it's imported protos will be compiled as well (so on and so forth).

* ${oldPackage} = ${newPackage}*
 * the matching package will be used for the compiled output.
 * useful to group certain protos together for certain scenarios.

= java_bean =

*generate_field_map* 
 * generates a mapping between the field number and field name.
 * If on, you can serialize json encoded messages writing either its field name or field number.
   {{{ 
      boolean numeric = false;
      JsonIOUtil.writeTo(out, message, numeric);
   }}}

*separate_schema*
 * statically declared schema (lite at runtime).

*generate_helper_methods*
 * additional helper methods for repeated fields

* ${message.name}.implements_declaration = implements com.example.Foo*
 * the matching message will implement the given interface.

* ${message.name}.extends_declaration = extends com.example.Bar*
 * the matching message will extend the given class.

= gwt_overlay =

*numeric*
 * the encoded property name of a message is referenced by its field number.
 * {"firstName":"John","lastName":"Doe"} is json-serialized as {"1":"John","2":"Doe"}

*plain_overlay*
 * simply generate plain overlays that basically returns the property without checks.
 * By default, the gwt overlays generated will return the field's default values if null, as configured on the .proto file.  

* dev_mode*
 * additional code for overlays with enums to work on hosted mode.
 
* use_global_json*
 * the "parse" and "stringify" method would delegate to $wnd.JSON.parse and $wnd.JSON.stringify respectively.

*generate_helper_methods*
 * additional helper methods for repeated fields
 
* ${message.name}.implements_declaration = implements com.example.Foo*
 * the matching message will implement the given interface.
 * Note that gwt overlays can implement interfaces if gwt-2.0 +