#summary using the compiler via maven

={{{Using the proto compiler via maven }}}=

Currently there are 2 outputs:
 * java_bean
 * gwt_overlay

=={{{Model.proto}}}==
{{{
package foo;

option optimize_for = LITE_RUNTIME;
option java_package = "com.example.foo.model";

message Greet {
  optional int32 id = 1;
  optional string name = 2;
  optional string msg = 3;
  enum Status {
    NEW = 0;
    ACKNOWLEDGED = 1;
  }
  optional Status status = 4;
}
}}}

=={{{pom.xml plugin setup}}}==
{{{
      <plugin>
        <groupId>com.dyuproject.protostuff</groupId>
        <artifactId>protostuff-maven-plugin</artifactId>
        <version>${protostuff.version}</version>
        <configuration>
          <protoModules>
            <protoModule>
              <source>src/main/resources/Model.proto</source>
              <outputDir>src/main/java</outputDir>
              <output>java_bean</output>
              <encoding>UTF-8</encoding>
              <options>
                <property>
                  <name>generate_field_map</name>
                </property>
                <property>
                  <name>separate_schema</name>
                </property>
              </options>
            </protoModule>
          </protoModules>
        </configuration>
        <executions>
          <execution>
            <id>generate-sources</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

}}}