// Generated by http://code.google.com/p/protostuff/

package ${module.getOutputPackage()};

import com.google.gwt.core.client.*;

#set( $name = $model.getModelMeta().getMessageClass().getSimpleName() )
/**
 * A simple wrapper generated from the protobuf message 
 * ${module.getFullClassname()}.${name} 
 */
public final class ${name} extends JavaScriptObject {
    #foreach( $ec in $Util.getEnumClasses($model) )

    public static final class ${ec.getSimpleName()} extends JavaScriptObject {
        #foreach( $c in $ec.getEnumConstants() )

        public static final Status ${c} = create("${c}");
        #end

        private static native ${ec.getSimpleName()} create(String name) /*-{
            return name;
        }-*/;

        protected ${ec.getSimpleName()}() {}

        public native String name() /*-{
            return this;
        }-*/;
    }
    #end

    /**
     * Creates a new ${name} instance 
     *
     * @return new ${name} instance
     */
    public static native ${name} create() /*-{
        return {};
    }-*/;

    /**
     * Creates a new JsArray<${name}> instance 
     *
     * @return new JsArray<${name}> instance
     */
    public static native JsArray<${name}> createArray() /*-{
        return [];
    }-*/;

    /**
     * Gets a ${name} (casting) from a JavaScriptObject
     *
     * @param JavaScriptObject to cast
     * @return ${name}
     */
    public static native ${name} get(JavaScriptObject jso) /*-{
        return jso;
    }-*/;

    /**
     * Gets a JsArray<${name}> (casting) from a JavaScriptObject
     *
     * @param JavaScriptObject to cast
     * @return JsArray<${name}> 
     */
    public static native JsArray<${name}> getArray(JavaScriptObject jso) /*-{
        return jso;
    }-*/;

    /**
     * Parses a ${name} from a jsonString
     *
     * @param jsonString to be parsed/evaluated
     * @return ${name} 
     */
    public static native ${name} parse(String jsonString) /*-{
        return eval("(" + jsonString + ")");
    }-*/;

    /**
     * Parses a JsArray<${name}> from a jsonString
     *
     * @param jsonString to be parsed/evaluated
     * @return JsArray<${name}> 
     */
    public static native JsArray<${name}> parseArray(String jsonString) /*-{
        return eval("(" + jsonString + ")");
    }-*/;

    protected ${name}() {}
    #foreach( $p in $model.getProperties() )
    #set( $pm = $p.getPropertyMeta() )
    #set( $pn = $pm.getName() )
    #set( $ppn = $Util.toPascal($pn) )
    #set( $dpn = $Util.getDerivedPropName($module, $pm) )
    #set( $dan = $Util.getDerivedArgName($module, $pm) )
    #set( $tc = $pm.getTypeClass() )

    /** ${dpn} **/
    #if( $pm.isRepeated() )
    #set( $ctc = $pm.getComponentTypeClass() )
    #if( ${pm.isMessage()} )

    public native JsArray<${ctc.getSimpleName()}> get${ppn}Array() /*-{
        return this["${dpn}"];
    }-*/;

    public native int get${ppn}Count() /*-{
        return this["${dpn}"].length;
    }-*/;

    public native ${ctc.getSimpleName()} get${ppn}(int index) /*-{
        return this["${dpn}"][index];
    }-*/;

    public native void set${ppn}(int index, ${ctc.getSimpleName()} ${dan}) /*-{
        this["${dpn}"][index] = ${dan};
    }-*/;

    public native void clear${ppn}() /*-{
        this["${dpn}"] = [];
    }-*/;

    public void add${ppn}(${ctc.getSimpleName()} ${dan}) {
        set${ppn}(get${ppn}Count(), ${dan});
    }
    #elseif( ${ctc.getSimpleName()} == "ByteString" )

    public native JsArrayString get${ppn}Array() /*-{
        return this["${dpn}"];
    }-*/;

    public native int get${ppn}Count() /*-{
        return this["${dpn}"].length;
    }-*/;

    public native String get${ppn}(int index) /*-{
        return this["${dpn}"][index];
    }-*/;

    public native void set${ppn}(int index, String ${dan}) /*-{
        this["${dpn}"][index] = ${dan};
    }-*/;

    public native void clear${ppn}() /*-{
        this["${dpn}"] = [];
    }-*/;

    public void add${ppn}(String ${dan}) {
        set${ppn}(get${ppn}Count(), ${dan});
    }
    #elseif( ${ctc.isEnum()} )

    public native JsArray<${ctc.getSimpleName()}> get${ppn}Array() /*-{
        return this["${dpn}"];
    }-*/;

    public native int get${ppn}Count() /*-{
        return this["${dpn}"].length;
    }-*/;

    public native ${ctc.getSimpleName()} get${ppn}(int index) /*-{
        return this["${dpn}"][index];
    }-*/;

    public native void set${ppn}(int index, ${ctc.getSimpleName()} ${dan}) /*-{
        this["${dpn}"][index] = ${dan};
    }-*/;

    public native void clear${ppn}() /*-{
        this["${dpn}"] = [];
    }-*/;

    public void add${ppn}(${ctc.getSimpleName()} ${dan}) {
        set${ppn}(get${ppn}Count(), ${dan});
    }
    #elseif( ${ctc.getSimpleName()} == "boolean" ) 

    public native JsArrayBoolean get${ppn}Array() /*-{
        return this["${dpn}"];
    }-*/;

    public native int get${ppn}Count() /*-{
        return this["${dpn}"].length;
    }-*/;

    public native boolean get${ppn}(int index) /*-{
        return this["${dpn}"][index];
    }-*/;

    public native void set${ppn}(int index, boolean ${dan}) /*-{
        this["${dpn}"][index] = ${dan};
    }-*/;

    public native void clear${ppn}() /*-{
        this["${dpn}"] = [];
    }-*/;

    public void add${ppn}(boolean ${dan}) {
        set${ppn}(get${ppn}Count(), ${dan});
    }
    #elseif( ${ctc.getSimpleName()} == "String" )

    public native JsArrayString get${ppn}Array() /*-{
        return this["${dpn}"];
    }-*/;

    public native int get${ppn}Count() /*-{
        return this["${dpn}"].length;
    }-*/;

    public native String get${ppn}(int index) /*-{
        return this["${dpn}"][index];
    }-*/;

    public native void set${ppn}(int index, String ${dan}) /*-{
        this["${dpn}"][index] = ${dan};
    }-*/;

    public native void clear${ppn}() /*-{
        this["${dpn}"] = [];
    }-*/;

    public void add${ppn}(String ${dan}) {
        set${ppn}(get${ppn}Count(), ${dan});
    }
    #elseif( ${ctc.getSimpleName()} == "int" )

    public native JsArrayInteger get${ppn}Array() /*-{
        return this["${dpn}"];
    }-*/;

    public native int get${ppn}Count() /*-{
        return this["${dpn}"].length;
    }-*/;

    public native int get${ppn}(int index) /*-{
        return this["${dpn}"][index];
    }-*/;

    public native void set${ppn}(int index, int ${dan}) /*-{
        this["${dpn}"][index] = ${dan};
    }-*/;

    public native void clear${ppn}() /*-{
        this["${dpn}"] = [];
    }-*/;

    public void add${ppn}(int ${dan}) {
        set${ppn}(get${ppn}Count(), ${dan});
    }
    #else

    public native JsArrayNumber get${ppn}Array() /*-{
        return this["${dpn}"];
    }-*/;

    public native int get${ppn}Count() /*-{
        return this["${dpn}"].length;
    }-*/;

    public native double get${ppn}(int index) /*-{
        return this["${dpn}"][index];
    }-*/;

    public native void set${ppn}(int index, double ${dan}) /*-{
        this["${dpn}"][index] = ${dan};
    }-*/;

    public native void clear${ppn}() /*-{
        this["${dpn}"] = [];
    }-*/;

    public void add${ppn}(double ${dan}) {
        set${ppn}(get${ppn}Count(), ${dan});
    }
    #end
    #elseif( ${pm.isMessage()} )

    public native ${tc.getSimpleName()} get${ppn}() /*-{
        return this["${dpn}"];
    }-*/;

    public native void set${ppn}(${tc.getSimpleName()} ${dan}) /*-{
        this["${dpn}"] = ${dan};
    }-*/;
    #elseif( ${tc.getSimpleName()} == "ByteString" )

    public native String get${ppn}() /*-{
        return this["${dpn}"];
    }-*/;

    public native void set${ppn}(String ${dan}) /*-{
        this["${dpn}"] = ${dan};
    }-*/;
    #elseif( ${tc.isEnum()} )

    public native ${tc.getSimpleName()} get${ppn}() /*-{
        return this["${dpn}"];
    }-*/;

    public native void set${ppn}(${tc.getSimpleName()} ${dan}) /*-{
        this["${dpn}"] = ${dan};
    }-*/;
    #elseif( ${tc.getSimpleName()} == "boolean" ) 

    public native boolean get${ppn}() /*-{
        return this["${dpn}"];
    }-*/;

    public native void set${ppn}(boolean ${dan}) /*-{
        this["${dpn}"] = ${dan};
    }-*/;
    #elseif( ${tc.getSimpleName()} == "String" )

    public native String get${ppn}() /*-{
        return this["${dpn}"];
    }-*/;

    public native void set${ppn}(String ${dan}) /*-{
        this["${dpn}"] = ${dan};
    }-*/;
    #elseif( ${tc.getSimpleName()} == "int" )

    public native int get${ppn}() /*-{
        return this["${dpn}"];
    }-*/;

    public native void set${ppn}(int ${dan}) /*-{
        this["${dpn}"] = ${dan};
    }-*/;
    #else

    public native double get${ppn}() /*-{
        return this["${dpn}"];
    }-*/;

    public native void set${ppn}(double ${dan}) /*-{
        this["${dpn}"] = ${dan};
    }-*/;
    #end
    #end

}